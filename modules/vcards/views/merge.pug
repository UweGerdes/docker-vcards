//- merge.pug
mixin parts(value, name)
  each part, i in fields[name].parts_order
    if value[part]
      span(title=part)= value[part] + ' '

mixin types(types, name, index)
  if typeof types == 'string'
    input(type='hidden', id='value_' + name + index, name=name + index + '_type', value=types)
    span.type= ' (' + type(types) + ')'
  else
    each type, i in types
      input(type='hidden', id='value_' + name + index + i, name=name + index + '_type', value=type)
    span.type= ' (' + type(types).join(", ") + ')'

mixin list2(prop, other, name, id)
  - var otherValues = []
  if other
    - otherValues = other.map(elem => JSON.stringify(elem.value) + JSON.stringify(elem.type))
  ul.values
    each item, i in prop
      li.values-item
        if item.value && otherValues.indexOf(JSON.stringify(item.value) + JSON.stringify(item.type)) < 0
          input(type='checkbox', name=id + i, value=item.value, checked, id=id + '_' + i)
          label(for=id + '_' + i)
            if fields[name].parts_order
              label(for=id)
                + parts(item.value, name)
            else
              = item.value
            if item.type
              + types(item.type, id, i)

mixin image(prop, name)
  input(
    type='hidden',
    id=name + '_type',
    name=name + '_type',
    value=prop.type)
  input(
    type='hidden',
    id=name + '_encoding',
    name=name + '_encoding',
    value=prop.encoding)
  img(src='data:image/' + prop.type + ';' + prop.encoding.toLowerCase() + ',' + prop.value)

mixin choice2(prop, other, name, id)
  span.choice
    if prop.value && (!other || JSON.stringify(prop.value) != JSON.stringify(other.value))
      input(type='radio', name=name, value=prop.value, checked=!other, id=id)
      label(for=id)
        if fields[name].parts
          + parts(prop.value, name)
        else if fields[name].type == 'image'
          + image(prop, name)
        else
          = prop.value

mixin value2(prop, other, name, id)
  if prop
    if fields[name].type == 'list'
      + list2(prop, other, name, id)
    else
      if prop.value
        + choice2(prop, other, name, id)
  else
    | !{'&nbsp;'}

mixin field2(prop1, prop2, name)
  if ['xTimestamp', 'xStatus'].indexOf(name) < 0
    li.list-item
      div(id=name).fielddiv.label= fields[name].label + ":"
      div.itemvalue.i1
        + value2(prop1, null, name, name + '1')
      div.itemvalue.i2
        + value2(prop2, prop1, name, name + '2')

#mergeView.mergeView
  - var names1 = vcard.fields
  - var names2 = vcard2.fields
  form#merge.merge(method='POST', action='/vcards/save/' + id + '/' + id2)
    ul#fieldList.item-list
      each name in names1
        + field2(vcard.prop[name], vcard2.prop[name], name)
      each name in names2
        if (names1.indexOf(name) < 0)
          + field2(null, vcard2.prop[name], name)

    - var status = (vcard.text.xStatus ? vcard.text.xStatus + ', ' : '') + 'merge'
    each field in ['xTimestamp', 'xStatus']
      - var vcard = null
      - var index = ''
      include input-field.pug

    #submit.submit
      input.searchSubmit(type='submit', value='speichern')
